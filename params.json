{"name":"Lets Kill Things","tagline":"A tool for helping manage combat in a turn based environment. Allowing DM's/GM's to control stats such as AC, HP, and damage taken for a group.","body":"##Table of Contents\r\n* [Getting Started](#getting-stated)\r\n* [Wiki](https://github.com/obihann/lets-kill-things/wiki)\r\n* [License](#license)\r\n\r\n##Getting Started\r\nBelow is our getting started guide broken down by tool. In addition to this we have grouped the infomation together based on server, which you can access here:\r\n\r\n* [API](/api)       - Drakov API server\r\n* [Web](/web)       - Frontent HTTP server\r\n* [Socket](/socket) - Socket.io server\r\n\r\n###Node\r\nWe use Node for a lot of things from build tools to our socket server. To get this setup you will have to run the following commands.\r\n\r\n* **Build tools:**\r\n        \r\n    ```\r\n    $ cd web\r\n    $ npm install\r\n    ```\r\n\r\n* **Socket server:**\r\n\r\n    ```\r\n    $ cd socket\r\n    $ npm install\r\n    ```\r\n\r\n###Bower\r\nWe use Bower to manage packages such as jQuery and Backbone.\r\n\r\nIf you haven't used [Bower](http://bower.io/) before, be sure to check out the documentation, as it explains exactly what it does, and all its cool features. You can install Bower with the following command:\r\n\r\n* **Installation:** \r\n    \r\n    ```\r\n    $ cd web\r\n    $ npm install -g bower\r\n    ```\r\n\r\n* **Use:**\r\n    > Once you have Bower installed you can run the following command in the \"public\" folder to setup all the requirements for this project:\r\n\r\n    ```\r\n    $ cd web\r\n    $ bower install\r\n    ```\r\n\r\n###Grunt\r\nWe use Grunt to compile source, and also watch folders during development.\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide. You can install Grunt with the following command:\r\n\r\n* **Installation:**\r\n\r\n    ```\r\n    $ npm install -g grunt-cli \r\n    ```\r\n\r\n* **Use:**\r\n\r\n    > Once you have Grunt installed you can run the following command to build the site (note grunt will automatically build into the \"public\" folder, as specificed in \"Gruntfile.js\"):\r\n\r\n    ``` \r\n    $ cd web\r\n    $ grunt \r\n    ```\r\n\r\n###Drakov\r\nWe currently use a mock API server (Drakov), whhich reads in [API Blueprint](https://apiblueprint.org/) to generate a mock server.\r\n\r\n* **Installation:**\r\n\r\n    ```\r\n    $ npm install -g drakov\r\n    ```\r\n\r\n* **Use:**\r\n\r\n    ```\r\n    $ cd api\r\n    $ drakov -f api/server.MD\r\n    ```\r\n\r\n###Supervisor\r\nSupervisor manages our various processes for us. If you don't already have it installed you can do so with the Python tool easy_install:\r\n\r\n* **Installation: **\r\n\r\n    ```\r\n    $ easy_install supervisor\r\n    ```\r\n\r\n* **Setup:**\r\n\r\n    > From your project folter, you are going to have to create a few folders for supervisor to use:\r\n\r\n    ```\r\n    $ mkdir logs\r\n    $ mkdir tmp\r\n    ```\r\n\r\n* **Use:**\r\n    > Once you have it installed you can go ahead and run supervisor, then feed it some commands:\r\n\r\n    ```\r\n    $ sudo supervisord -c supervisor/supervisord.conf\r\n    $ supervisorctl\r\n    api                     STOPPED   Not started\r\n    web                     STOPPED   Not started\r\n    socket                  STOPPED   Not started\r\n    supervisor> start api\r\n    api: started\r\n    supervisor> start socket\r\n    socket: started\r\n    supervisor> start web\r\n    web: started\r\n    supervisor>\r\n    ```\r\n\r\n##License\r\nThis tool is protected by the [GNU General Public License v2](http://www.gnu.org/licenses/gpl-2.0.html).\r\n\r\nCopyright [Jeffrey Hann](http://jeffreyhann.ca/) 2015\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}